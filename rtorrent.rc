## Instance layout (base paths)
method.insert = cfg.download, string|private|const, (cat, "/download")
method.insert = cfg.session,  string|private|const, (cat, "/session")
method.insert = cfg.watch,    string|private|const, (cat, "/watch")

## Create base directory
method.insert = dirs,    string|private|const, (cat, "'leeching;seeding'")
method.insert = subdirs, string|private|const, (cat, "'apps;books;games;movies;music;other;tv'")

execute.throw = sh, -c, (cat, "for DIR in `echo ", (dirs), " | tr ';' '\\n'`; do ", \
        "for SUBDIR in `echo ", (subdirs), " | tr ';' '\\n'`; do ", \
            "mkdir -p ", (cfg.download), "/$DIR/$SUBDIR; ", \
        "done; ", \
    "done")

execute.throw = sh, -c, (cat, "for SUBDIR in `echo ", (subdirs), " | tr ';' '\\n'`; do ", \
        "mkdir -p ", (cfg.watch), "/$SUBDIR; ", \
    "done")

## Basic operational settings
encoding.add          = UTF-8
session.path.set      = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download), "/leeching")

## watch configuration
method.insert = load.file, simple|private, "load.start_verbose= (argument.0), (cat, d.directory.set=, (directory.default)), d.delete_tied="
#method.insert = load.file, string|private, (branch, (equal, ((cat, "TEST")), ((cat, "TEST"))), ((print, "egale")), ((print, "not egale")))

directory.watch.added = (cat, (cfg.watch), "/apps/"), load.file
directory.watch.added = (cat, (cfg.watch), "/books/"), load.file
directory.watch.added = (cat, (cfg.watch), "/games/"), load.file
directory.watch.added = (cat, (cfg.watch), "/movies/"), load.file
directory.watch.added = (cat, (cfg.watch), "/music/"), load.file
directory.watch.added = (cat, (cfg.watch), "/other/"), load.file
directory.watch.added = (cat, (cfg.watch), "/tv/"), load.file


method.insert = func.dir, simple|private, "execute.capture= sh, -c, (cat, \"echo -n '\", (argument.0), \"' | sed 's|\\\\(.*\\\\)/\", (argument.1), \"|\\\\1|'\")"
method.insert = label.test, simple|private, "func.dir= (d.directory), (d.name)"
#method.set_key = event.download.inserted_new, label.add, ((print, ((func.dir, ((d.directory)), ((d.name))))))
#method.set_key = event.download.inserted_new, label.add, ((print, ((directory.default)), ((label.test))))
#method.set_key = event.download.inserted_new, label.add, ((branch, ((equal, (directory.default), ((label.test)))), (print, "egale"), (print, "not egale")))
method.set_key = event.download.inserted_new, label.add, "branch= ((equal, ((directory.default)), ((label.test)))), ((print, \"egale\")), ((print, \"|\", (directory.default), \"|\", (label.test), \"|\"))"
